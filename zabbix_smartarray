Мониторинг HP Smart Array в Zabbix
Установка программы hpacucli в Ubuntu Ubuntu

apt-get install hpacucli

Установка скрипта

Создание папки для скриптов:

mkdir /etc/zabbix/scripts/
chown root:zabbix -R /etc/zabbix/scripts/
chmod 750 /etc/zabbix/scripts/

Создадим сам скрипт:
/etc/zabbix/scripts/hpsmartarray.sh

#!/bin/bash
export LC_ALL=""
export LANG="en_US.UTF-8"
#
HPACUCLI="sudo /usr/sbin/hpacucli"
SLOT="1"
#
if [[ -n "$1" && -n "$2" && -z "$3" ]]; then
  ##### DISCOVERY #####
  TYPE="$2"
  if [[ "${TYPE}" == "ldiscovery" ]]; then
    DRIVES=`${HPACUCLI} ctrl slot=${SLOT} ld all show status | awk '/logicaldrive/ {printf("Logical_%s\n", $2)}' | sed 's/:/./g'`
    if [[ -n ${DRIVES} ]]; then
      JSON="{ \"data\":["
      SEP=""
      for DRIVE in ${DRIVES}; do
        JSON=${JSON}"$SEP{\"{#LD}\":\"${DRIVE}\"}"
        SEP=", "
      done
      JSON=${JSON}"]}"
      echo ${JSON}
    fi
    exit 0
  elif [[ ${TYPE} == "pdiscovery" ]]; then
    DRIVES=`${HPACUCLI} ctrl slot=${SLOT} pd all show status | awk '/physicaldrive/ {printf("Physical_%s\n", $2)}' | sed 's/:/./g'`
    if [[ -n ${DRIVES} ]]; then
      JSON="{ \"data\":["
      SEP=""
      for DRIVE in ${DRIVES}; do
        JSON=${JSON}"$SEP{\"{#PD}\":\"${DRIVE}\"}"
        SEP=", "
      done
      JSON=${JSON}"]}"
      echo ${JSON}
    fi
    exit 0
  else
    exit 1
  fi
elif [[ -n "$1" && -n "$2" && -n "$3" ]]; then
  ##### PARAMETERS #####
  RESERVED="$1"
  DRIVE="$2"
  METRIC="$3"
  CACHE_TTL="50"
  CACHE_FILE="/tmp/zabbix.hpsmartarray.cache"
  EXEC_TIMEOUT="5"
  NOW_TIME=`date '+%s'`
  ##### RUN #####
  if [ -s "${CACHE_FILE}" ]; then
    CACHE_TIME=`stat -c"%Y" "${CACHE_FILE}"`
  else
    CACHE_TIME=0
  fi
  DELTA_TIME=$((${NOW_TIME} - ${CACHE_TIME}))
  #
  if [ ${DELTA_TIME} -lt ${EXEC_TIMEOUT} ]; then
    sleep $((${EXEC_TIMEOUT} - ${DELTA_TIME}))
  elif [ ${DELTA_TIME} -gt ${CACHE_TTL} ]; then
    echo "" >> "${CACHE_FILE}" # !!!
    DATACACHE=`${HPACUCLI} ctrl slot=${SLOT} ld all show status | awk '{print $1,$2,$NF}' | awk '/logicaldrive/ {printf("Logical_%s Status:%s\n", $2, $3)}';
        ${HPACUCLI} ctrl slot=${SLOT} pd all show detail | sed '/physicaldrive/ s/:/./g; s/\(physicaldrive\)/\1:/g' | awk -F':' '
        function ltrim(s) { sub(/^[ \t]+/, "", s); return s }
        function rtrim(s) { sub(/[ \t]+$/, "", s); return s }
        function trim(s)  { return rtrim(ltrim(s)); }
        /physicaldrive/       {fd_counter+=1; fd[fd_counter]=trim($2)}
        /Status/              {status[fd_counter]=trim($2)}
        /Serial Number/       {serial[fd_counter]=trim($2)}
        /Current Temperature/ {temperature[fd_counter]=trim($2)}
        END {
          for (i=1; i<=fd_counter; i+=1) {
            printf ( "Physical_%s Status:%s\n", fd[i], status[i]);
            printf ( "Physical_%s Serial:%s\n", fd[i], serial[i]);
            printf ( "Physical_%s Temperature:%s\n", fd[i], temperature[i]);
          }
        }'`
    echo "${DATACACHE}" > "${CACHE_FILE}" # !!!
    chmod 640 "${CACHE_FILE}"
  fi
  #
  cat "${CACHE_FILE}" | grep -iw "${DRIVE}" | awk -F':' 'BEGIN{IGNORECASE=1} /'${METRIC}'/ {print $2}' | head -n1
  exit 0
#
else
  exit 1
fi

Скрипт поддерживает обнаружение (discovery) логических и физических дисков.
Скрипт предусматривает кеш, что позволяет сократить количество реальных обращений к серверу.
Время действия кеша в секундах должно устанавливается чуть меньше чем минимальный период опроса элементов (CACHE_TTL + EXEC_TIMEOUT < T).
Т.к. hpacucli работает медленно, необходимо увеличить Timeout Zabbix Agent'a, и при необходимости увеличить EXEC_TIMEOUT в скрипте

Установка прав

chown root:zabbix /etc/zabbix/scripts/hpsmartarray.sh
chmod 700 /etc/zabbix/scripts/hpsmartarray.sh
Настройка прав пользователю zabbix в sudo
/etc/sudoers

##### CUSTOM #####
zabbix ALL=(ALL) NOPASSWD: /usr/sbin/hpacucli ctrl slot=1 ld all show status
zabbix ALL=(ALL) NOPASSWD: /usr/sbin/hpacucli ctrl slot=1 pd all show status
zabbix ALL=(ALL) NOPASSWD: /usr/sbin/hpacucli ctrl slot=1 pd all show detail

Проверить работу скрипта для zabbix:
sudo -u zabbix /etc/zabbix/scripts/hpsmartarray.sh none ldiscovery
sudo -u zabbix /etc/zabbix/scripts/hpsmartarray.sh none pdiscovery
sudo -u zabbix /etc/zabbix/scripts/hpsmartarray.sh none "Physical_1I.1.1" status
sudo -u zabbix /etc/zabbix/scripts/hpsmartarray.sh none "Physical_1I.1.1" temp
Вы должны получить данные, если этого не произошло, то конфигурация выполнена не правильно.

Настройка Zabbix сервера

Вызов скрипта через zabbix-agent

Настройка

/etc/zabbix/zabbix_agentd.conf

...

UserParameter=hpsmartarray[*],/etc/zabbix/scripts/hpsmartarray.sh "none" "$1" "$2"
Перезапустить

/etc/init.d/zabbix-agentd restart
Проверка

zabbix_get -s HOST -k 'hpsmartarray[Physical_1I.1.1, temp]'
Для контролируемых данных в Zabbix нужно создать соответствующее элементы с типом "Zabbix агент" и ключом типа:

hpsmartarray[disk, key]
где disk - имя логического диска Logical_<X> или физического диска Physical_<X>
key - контролируемая метрика

Готовый Шаблон для мониторинга HP Smart Array (agent) с уже настроенными элементами и графиками. 
http://wiki.enchtex.info/handmade/zabbix/zabbix_templates
